{"remainingRequest":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/roliasong/Desktop/WebDev/authenticating/front-end/src/components/MyTickets.vue?vue&type=style&index=0&id=7efeba1b&scoped=true&lang=css&","dependencies":[{"path":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/src/components/MyTickets.vue","mtime":1639626896053},{"path":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/node_modules/css-loader/dist/cjs.js","mtime":1639544567330},{"path":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1639544569324},{"path":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/node_modules/postcss-loader/src/index.js","mtime":1639544567961},{"path":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1639544566065},{"path":"/Users/roliasong/Desktop/WebDev/authenticating/front-end/node_modules/vue-loader/lib/index.js","mtime":1639544568744}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGV4dGFyZWEgewogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogNTAwcHg7Cn0KCmgzIHsKICBmb250LXNpemU6IDEycHg7CiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjOwogIHBhZGRpbmc6IDEwcHggMjBweDsKfQoKCmxhYmVsIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwOwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiA1cHg7CiAgYm9yZGVyLXJhZGl1czogMzBweDsKICBmb250LXNpemU6IDEycHg7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgoudGlja2V0IHt9Cg=="},{"version":3,"sources":["MyTickets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"MyTickets.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"main\">\n  <h2>Logged in as: {{user.firstName}} {{user.lastName}} <button @click=\"logout\" class=\"pure-button pure-button-primary\">Logout</button></h2>\n  <h1>My Tickets</h1>\n  <div>\n    <button @click=\"setCreating\" class=\"pure-button button-xsmall\">\n        <i class=\"fas fa-plus\" />\n    </button>\n    </div>\n    <form class=\"pure-form\" v-if=\"creating\" @submit.prevent=\"addTicket\">\n    <legend>Describe your problem for us.</legend>\n    <fieldset>\n        <textarea v-model=\"problem\"></textarea>\n        <br />\n        <button @click=\"cancelCreating\" class=\"pure-button space-right\">Cancel</button>\n        <button class=\"pure-button pure-button-primary\" type=\"submit\">Submit</button>\n    </fieldset>\n    </form>\n    <div v-for=\"ticket in tickets\" v-bind:key=\"ticket.id\">\n    <div class=\"ticket\">\n        <div class=\"problem\">\n        <h3><label>{{ticket.status}}</label> Problem reported {{time(ticket.created)}}</h3>\n        <p>{{ticket.problem}}</p>\n        <p v-if=\"ticket.response\"><i>{{ticket.response}}</i></p>\n        <p v-else><i>No response yet</i></p>\n        </div>\n    </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport moment from 'moment';\nexport default {\n  name: 'MyTickets',\n  data() {\n    return {\n      creating: false,\n      problem: '',\n      tickets: [],\n    }\n  },\n  computed: {\n    user() {\n      return this.$root.$data.user;\n    }\n  },\n  methods: {\n    async logout() {\n      try {\n        await axios.delete(\"/api/users\");\n        this.$root.$data.user = null;\n      } catch (error) {\n        this.$root.$data.user = null;\n      }\n    },\n    async getTickets() {\n      try {\n        let response = await axios.get(\"/api/tickets\");\n        this.tickets = response.data.tickets;\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    created() {\n        this.getTickets();\n    },\n    time(d) {\n      return moment(d).format('D MMMM YYYY, h:mm:ss a');\n    },\n    setCreating() {\n        this.creating = true;\n    },\n    cancelCreating() {\n        this.creating = false;\n    },\n    async addTicket() {\n      try {\n        await axios.post(\"/api/tickets\", {\n          problem: this.problem\n        });\n        this.problem = \"\";\n        this.creating = false;\n        this.getTickets();\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\ntextarea {\n  width: 100%;\n  max-width: 500px;\n}\n\nh3 {\n  font-size: 12px;\n  font-weight: normal;\n  background-color: #ccc;\n  padding: 10px 20px;\n}\n\n\nlabel {\n  background-color: #000;\n  color: white;\n  padding: 5px;\n  border-radius: 30px;\n  font-size: 12px;\n  margin-right: 10px;\n}\n\n.ticket {}\n</style>"]}]}